/*
 * Visual_Flow.java
 *
 * Created on 26 de Outubro de 2007, 18:20
 */

package rc_flow;


import java.awt.Color;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author  Miguel
 */
public class Visual_Flow extends javax.swing.JFrame {
    
    File ficheiro;
    Data_Manipulation datm;
    
    /** Creates new form Visual_Flow */
    public Visual_Flow() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        Tabela = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        filtrar = new javax.swing.JButton();
        Abrir_Ficheiro = new javax.swing.JButton();
        Tipo_Ficheiro = new javax.swing.JComboBox();
        Botao_Desenhar = new javax.swing.JButton();
        Guardar_Ficheiro = new javax.swing.JButton();
        Combo_campo = new javax.swing.JComboBox();
        Combo_entidade = new javax.swing.JComboBox();
        jPanel1 = new MyPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 500));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "tempo", "origem", "destino", "aplicação", "nível de rede", "transporte", "info"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setColumnSelectionAllowed(true);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(90); jTable1.getColumnModel().getColumn(1).setPreferredWidth(90); jTable1.getColumnModel().getColumn(2).setPreferredWidth(90); jTable1.getColumnModel().getColumn(3).setPreferredWidth(90); jTable1.getColumnModel().getColumn(4).setPreferredWidth(90); jTable1.getColumnModel().getColumn(5).setPreferredWidth(90); jTable1.getColumnModel().getColumn(6).setPreferredWidth(500);
        Tabela.setViewportView(jTable1);

        filtrar.setText("filtrar");
        filtrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtrarActionPerformed(evt);
            }
        });

        Icon myIcon;
        myIcon = new ImageIcon("src/recources/open.gif");
        Abrir_Ficheiro.setIcon(myIcon);
        Abrir_Ficheiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Abrir_FicheiroActionPerformed(evt);
            }
        });

        Tipo_Ficheiro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Wireshark", "Tcpdump", "Netflow" }));

        Botao_Desenhar.setText("Desenhar");
        Botao_Desenhar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_DesenharActionPerformed(evt);
            }
        });

        //Icon myIcon;
        myIcon = new ImageIcon("src/recources/save.gif");
        Guardar_Ficheiro.setIcon(myIcon);
        Guardar_Ficheiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Guardar_FicheiroActionPerformed(evt);
            }
        });

        Combo_campo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "origem", "destino", "aplica\u00e7\u00e3o", "n\u00edvel de rede", "transporte" }));
        Combo_campo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Combo_campoActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(Tabela, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 784, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                            .add(Tipo_Ficheiro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(Abrir_Ficheiro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(Guardar_Ficheiro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(layout.createSequentialGroup()
                            .add(21, 21, 21)
                            .add(Botao_Desenhar)))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, Combo_campo, 0, 158, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, Combo_entidade, 0, 158, Short.MAX_VALUE)
                    .add(filtrar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(Tabela, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 424, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(Guardar_Ficheiro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(Tipo_Ficheiro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(Abrir_Ficheiro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(38, 38, 38)
                        .add(Combo_campo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(Combo_entidade, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(filtrar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 84, Short.MAX_VALUE)
                        .add(Botao_Desenhar)
                        .add(16, 16, 16)
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(69, 69, 69)))
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Combo_campoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Combo_campoActionPerformed
        String[] s;
        ArrayList arrayl;
        
        
        if(Combo_campo.getSelectedItem().toString()=="origem"){
            arrayl= datm.elementos_campo(1);
        }
        else
        
        if(Combo_campo.getSelectedItem().toString()=="destino"){
            arrayl= datm.elementos_campo(2);
        }
        else
        if(Combo_campo.getSelectedItem().toString()=="aplicação"){
            arrayl= datm.elementos_campo(3);
        }
        else
        if(Combo_campo.getSelectedItem().toString()=="nível de rede"){
            arrayl= datm.elementos_campo(4);
        }
        else
        if(Combo_campo.getSelectedItem().toString()=="transporte"){
            arrayl= datm.elementos_campo(5);
        } 
        else { arrayl = new ArrayList();}
        
        
        s = new String[arrayl.size()];
        
        for(int i=0;i<arrayl.size();i++)
            s[i]=(String) arrayl.get(i);
            
        Combo_entidade.setModel(new javax.swing.DefaultComboBoxModel(s));
            
    }//GEN-LAST:event_Combo_campoActionPerformed

    private void Botao_DesenharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_DesenharActionPerformed
        JFrame frame = new JFrame("Estatísticas");
        frame.add(new MyPanel());
        frame.pack();
        frame.setBounds(500,300,300, 300);
        frame.setVisible(true);
        /*
        MyPanel mp = new MyPanel();
        mp.setLocation(1,1);
        mp.validate();
        mp.setVisible(true);
         */
    }//GEN-LAST:event_Botao_DesenharActionPerformed

    
class MyPanel extends JPanel {

    public MyPanel() {
        //setBorder(BorderFactory.createLineBorder(Color.black));
    }

    public Dimension getPreferredSize() {
        return new Dimension(100,100);
    }

    public void paintComponent(Graphics g) {
        super.paintComponent(g);       

        // Draw Text
        g.drawString("This is my custom Panel!",10,20);
        g.drawLine(5,5,50,50);
        //Image im;
        
        
    }  
}
    
    
    
    
    
    // Class to hold a value for a slice
    public class PieValue {
        double value;
        Color color;
    
        public PieValue(double value, Color color) {
            this.value = value;
            this.color = color;
        }
    }
    
    // slices is an array of values that represent the size of each slice.
    public void drawPie(Graphics2D g, Rectangle area, PieValue[] slices) {
        // Get total value of all slices
        double total = 0.0D;
        for (int i=0; i<slices.length; i++) {
            total += slices[i].value;
        }
    
        // Draw each pie slice
        double curValue = 0.0D;
        int startAngle = 0;
        for (int i=0; i<slices.length; i++) {
            // Compute the start and stop angles
            startAngle = (int)(curValue * 360 / total);
            int arcAngle = (int)(slices[i].value * 360 / total);
    
            // Ensure that rounding errors do not leave a gap between the first and last slice
            if (i == slices.length-1) {
                arcAngle = 360 - startAngle;
            }
    
            // Set the color and draw a filled arc
            g.setColor(slices[i].color);
            g.fillArc(area.x, area.y, area.width, area.height, startAngle, arcAngle);
    
            curValue += slices[i].value;
        }
    }

class MyComponent extends JComponent {
        PieValue[] slices = new PieValue[4];
    
        MyComponent() {
            slices[0] = new PieValue(25, Color.red);
            slices[1] = new PieValue(33, Color.green);
            slices[2] = new PieValue(20, Color.pink);
            slices[3] = new PieValue(15, Color.blue);
        }
    
        // This method is called whenever the contents needs to be painted
        public void paint(Graphics g) {
            // Draw the pie
            drawPie((Graphics2D)g, getBounds(), slices);
        }
    }

    
    
    
    
    
    private void Guardar_FicheiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Guardar_FicheiroActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(this);
        
        File f=chooser.getSelectedFile();
        this.setTitle(f.getName());
        
        String output="";
        for(int j=0;j<jTable1.getColumnCount();j++) output+=jTable1.getColumnName(j)+"\t\t";
        for(int i=0;i<jTable1.getRowCount();i++){
            output+="\n";
            for(int j=0;j<jTable1.getColumnCount();j++){
                output+=jTable1.getValueAt(i,j).toString()+"\t";
            }
        }
        
        
        
        BufferedWriter w;
        try {
            w = new BufferedWriter(new FileWriter(f));
            w.write(output);
            w.close();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_Guardar_FicheiroActionPerformed

    private void Abrir_FicheiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Abrir_FicheiroActionPerformed
        JFileChooser chooser = new JFileChooser();
    
        chooser.showOpenDialog(this);
        ficheiro=chooser.getSelectedFile();
        this.setTitle(ficheiro.getName());
        
        if(Tipo_Ficheiro.getSelectedItem().toString()=="Wireshark"){
            Data_Wireshark dat = new Data_Wireshark(ficheiro);
            dat.leitor_texto();
            datm = new Data_Manipulation(dat.getList());
        }
        
        if(Tipo_Ficheiro.getSelectedItem().toString()=="Tcpdump"){
            datm = new Data_Manipulation();
        }
        
        if(Tipo_Ficheiro.getSelectedItem().toString()=="Netflow"){
            datm = new Data_Manipulation();
        }
        
    }//GEN-LAST:event_Abrir_FicheiroActionPerformed

    private void filtrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtrarActionPerformed
        ArrayList arr;
        
        String campo=Combo_campo.getSelectedItem().toString();
        String entidade=Combo_entidade.getSelectedItem().toString();
        
        if(campo=="aplicação") arr=datm.filtragem(3,entidade);
        else
        if(campo=="nível de rede") arr=datm.filtragem(4,entidade);
        else
        if(campo=="transporte") arr=datm.filtragem(5,entidade);
        else
        if(campo=="origem") arr=datm.filtragem(1,entidade);
        else
        if(campo=="destino") arr=datm.filtragem(2,entidade);
        else arr=new ArrayList();
        
        jTable1.setModel(new javax.swing.table.DefaultTableModel( new Object [arr.size()][((ArrayList) arr.get(0)).size()],
            new String [] {
                "tempo", "origem", "destino", "aplicação", "nível de rede", "transporte", "info"
            }
        ));
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(90);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(90);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(90);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(90);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(90);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(90);
        jTable1.getColumnModel().getColumn(6).setPreferredWidth(500);
        
        
        for(int i=0;i<arr.size();i++){
            for(int j=0;j<((ArrayList) arr.get(i)).size();j++){
                Object obj = ( (ArrayList) ((ArrayList) arr).get(i) ).get(j);
                this.jTable1.setValueAt(obj,i,j);
            }
        }


        
    }//GEN-LAST:event_filtrarActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try { 
              UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
	} catch (Exception exc) {
	      System.err.println("Error loading L&F: " + exc);
	}

        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Visual_Flow().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Abrir_Ficheiro;
    private javax.swing.JButton Botao_Desenhar;
    private javax.swing.JComboBox Combo_campo;
    private javax.swing.JComboBox Combo_entidade;
    private javax.swing.JButton Guardar_Ficheiro;
    private javax.swing.JScrollPane Tabela;
    private javax.swing.JComboBox Tipo_Ficheiro;
    private javax.swing.JButton filtrar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    
}
